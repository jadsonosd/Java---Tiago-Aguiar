Opa seja muito bem vindo, seja muito bem vinda a mais uma aula e nessa aula a gente vai começar a instalar as ferramentas necessárias que a gente precisa pra trazer os nossos projetos a existência, além disso a gente vai instalar o nosso jdk que é o kit de desenvolvimento java com kit com os códigos prontos (17 segundos) feito pelos engenheiros do Java, todos os desenvolvedores que escreveram aquela linguagem em si, onde vai ter várias instruções pra gente criar botões, é fazer cálculos matemáticos enfim qualquer instrução que a gente queira trazer alguma coisa em existência algumam solução para o mercado a gente vai utilizar esse recurso que é o kit de desenvolvimento Java pra rodar em cima da da nossa JRE que foi aquilo que eu falei na aula passada. Então o JRE vai ser um ambiente de execução Java onde esses programas vão rodar e o jdk é o kit né com os códigos que a gente vai reutilizando e escrevendo pra realmente tornar o nosso projeto funcional então a gente vai instalar também né o ambiente de desenvolvimento integrado (01:00)(IDE Integrated Development Environment), o que é um ambiente de desenvolvimento integrado? É uma IDE, uma ide como você queira chamar, esse ambiente de desenvolvimento integrado nada mais é que um, uma ferramenta imagina o photoshop pra quem faz arte, desenho, realmente, trabalha com mídia por exemplo ou editor de vídeo que tem o seu adobe premiere o seu finalcut, enfim, qualquer editor de vídeo que você gosta de utilizar, todas essas ferramentas são ferramentas otimizadas pra facilitar a vida do profissional que tá trabalhando naquela área (01:36) e a gente como desenvolvedor a gente também tem que ter né essas ferramentas prontas, porquê a gente poderia escrever o nosso próprio código fonte no bloco de notas, poderia não tem problema nenhum a gente pode por exemplo abrir um bloco de notas e começar a escrever códigos, sintaxes, palavras é que o computador vai entender, sei lá a gente vai começar escrevendo depois, depois eu vou explicar mas por exemplo public class é Java e aí a gente vai criar os bloco de código e no final a gente vai salvar esse arquivo por exemplo no desktop com o nome do nosso arquivo .java, só que se a gente fizer isso aqui no bloco de notas eu vou não vou salvar isso aqui, desconsidera isso, a gente vai utilizar um ambiente integrado, a gente vai conseguir verificar se a gente tá escrevendo as coisas da forma correta se tiver algum bug no nosso projeto ele também deixa o editor mais colorido pra ver as palavras que a gente está escrevendo se eles estão corretas, enfim é uma ferramenta muito poderosa pra gente escrever os nossos códigos, então dá para fazer no bloco de notas? Até dá mas ninguém faz isso no dia a dia né, é surreal você criar projeto dessa forma, você fica muito mais propenso a ter erros.
	Então qual é o primeiro passo? O primeiro passo é nós ter o Java instalado, o jdk pronto pra gente usar né os códigos disponíveis dentro do kit que a gente vai baixar, então qual como que a gente baixa esse jdk se a gente vai abrir o seu navegador, tá e você (03:02) vai acessar a página do jdk.java.net, existe outros lugares que você também pode baixar o java, o jdk tá mas eu vou usar esse daqui que, que é o mais simples que pra gente fazer o download aqui e dentro do windows tá bom?
	Se você utilizar linux ou mac, pode baixar por exemplo do site da Oracle, tá você já deve saber mais sobre isso, você usa esssas tecnologias tá? o site da oracle a gente pode escrever aqui ó jdk.download.oracle, e você vai acessar aqui a parte do jdk da Oracle pra você fazer o download dele né então você vai ter que ter uma conta da Oracle, mas você pode baixar por exemplo a versão do seu MacOs. (03:46)

https://www.youtube.com/watch?v=ebEhe5NBUw4&list=PLJ0AcghBBWSi6nK2CUkw9ngvwWB1gE8mL&index=5

https://jdk.java.net/
https://www.oracle.com/java/technologies/downloads/

	E do seu linux também você pode ta utilizando aqui se você quiser, até mesmo do Windows também se você quiser, mas o processo de download é um pouco mais complexo, você tem que criar uma conta na Oracle, cadastrar o email pode demorar mais, a gente vai baixar aqui utilizando né o jdk.java.net e a gente vai baixar a versão específica e você pode me perguntar ah Tiago a gente não pode baixar uma versão, por exemplo a última versão? Olha eu não recomendo que você baixe a última versão porquê sai versões de Java toda hora talvez quando eu tiver gravando esse vídeo está na versão 17, quando você acessar o vídeo vai tá na versão 18, 19, 20, 30, 40. Enfim cada vez mais que eles lançam uma versão nova vem melhorias mas pode ser que mude alguma coisa da sintaxe, do código, né da instrução que a gente quer passar e dos códigos que a gente vai escrever.
	Então pra aula funcionar com precisão e você entender todas as instruções que a gente vai escrever, baixa a mesma versão que eu vou baixar que é a versão 14, a gente vai utillizar o Java na versão 14 pra gente fazer os nossos tutoriais, nossas aulas e entender por baixo dos panos como o computador interpreta né, o que a gente escreve pra ele fazer.
	Então você vai clicar aqui na versão 14, e aqui dentro da versão 14, vai ter o link pra fazer o download do windows 10 e do linux 7.6, vamo considerar só o windows 10 eu acho que a grande maioria dos que estão acessando esse treinamento utiliza windows, novamente se você tá utilizando linux vai lá no site Oracle, baixa a versão 14 do site da Oracle, ta, você pode procurar aqui no Java SE Downloads, SE vem de Standard Edition, então edição padrão, procura aqui o java 14, tá vai ter disponível em algum lugar dessa página ou mesmo você pode procurar né no google ã,... oracle jdk 14 e aí você vai ter o acesso direto pro link do jdk 14, tá, mas novamente voltando aqui, a grande maioria usa windows então a gente vai baixar aqui no java dot net. Java.net então a gente vai começar o download desse aqui do arquivo zipado, arquivo compactado, vamo ve ele vai fazer o download tá, e aí quando ele terminar o download a gente vai descompactar ele, eu vou pausar aqui, que eu já fiz o download dele aqui antes de começar o vídeo, então eu baixei ele na pasta download, e aqui na pasta download a gente vai extrair ele, então com o botão direito extrair ele e a gente vai extrair ele, vou extrair ele aqui nessa pasta mesmo local. Então a gente vai deixar ele fazer a extração. E eu já volto com vocês, aqui pra explicar mais uns fundamentos. Então beleza ele fez o download, já fez a extração, então dentro dessa pasta, a gente tem uma outra pasta chamada de jdk-14, aqui dentro aqui a gente tem a pasta bin, a pasta const e outras pastas maiores aqui que a gente vai utilizar então aqui dentro vai tá todos os códigos que a gente precisa pra escrever os nossos próprios programas tá, isso aqui é um programa como qualquer outro, tá bom? 
	Então um conjunto de códigos como por exemplo o photoshop que você tem instalado no seu computador então o que eu vou fazer, para não deixar na pasta download, vamo organizar um pouco mais nossas pastas, vamo pegar esse jdk 14, vamos cortar ele, tá vamo tirar ele daqui vamo recortar e vamos lá no c:, e se é tiver outra unidade de disco no seu computador d:, por exemplo é verifica qual que é que você tá utilizando, a maioria usa c:, procura por arquivo de programas né onde a gente guarda né e instala os programas por um todo e cola ele nesse diretório aqui no arquivo de programas tá? dei continuar e faz o recorte e cola ele aqui, então a gente vai deixar ele aqui tá, a gente vai, deixar ele aqui pra gente fazer uma referência pra ele pra nossos editores de texto a gente conseguir utilizar ele aqui dentro. Então o próximo passo é a gente baixar uma IDE no caso  uma que vai ser uma IDE para a gente escrever os nossos programas. 07:52 (08:01)
	O universo Java existe, a gente vê várias ideias que a gente pode trabalhar existe eclipse, a JetBeans, existe outras também. É a gente vai usar uma que é similar ao android studio, visto que o nosso foco aqui é a  gente começar a aprender né, desenvolvimento para lá na frente 08:01 08:09, criar os nossos aplicativos dentro do android studio que é a ferramenta que a gente 08:13 vai usar no futuro, então você vai pesquisar no google ou até mesmo qualquer buscador, 08:19 IntelliJ com dois l e o J, download, então você vai baixar essa ferramenta aqui que é fornecida pela empresa JetBrains, a mesma empresa que criou o Android Studio né que fornece e não tem o Android Studio, então uma vez aprendendo você mexendo no IntelliJ, fica mais fácil você mexer no Android Studio e essa é uma ferramenta base dele, tá? Então você vai acessar a parte de download para fazer o download do IntelliJ, IntelliJ ele tem duas versões da versão ultimate e a versão community que é a versão de comunidade. A versão ultimate é pra quem vai fazer desenvolvimento web mais corporativo e ela é paga tá, a gente não precisa pagar nada, a gente vai usar a versão comunidade que é para desenvolvimento do Java normal da jvm da máquina java (09:08) o mesmo que a gente falou aqui nas aulas passadas, e também para desenvolvimento Android, então a gente vai baixar esse esse .exe.
	Se você tiver em outro computador como o MacOs, você baixa, vai baixar o .dmg, tá, aí se o seu processador é intel ou o seu é um apple você vai baixar aqui ou aqui, se você é de linux vai baixar um arquivo compactado aqui também. Como a gente tá dentro do windows, a gente vai baixar esse .exe tá esse arquivo executável. Então vamo clicar para fazer o download ele vai começar a fazer o download do IntelliJ, tá novamente eu já baixei ele aqui, eu vou parar, pausar o download, então eu já tenho na minha pasta downloads, este executável do IntelliJ, tá bom?
	Então a gente vai dar duplo clique no IntelliJ, no momento que eu fiz esse vídeo, a versão, a última disponível é a 2021, talvez quando você estiver assistindo esse vídeo uma outra versão tá uma versão mais recente 2022, 2023, 2024, 25, mas o fundamento é o dela mesmo tá bom? O fundamento dela de utilizar ela é o mesmo. Então uma vez baixado e aberto ele aqui a gente vai clicar em next, next, aai, quando cai nessa tela pra escolher o ícone na desktop, a gente pode marcar e a gente pode marcar para ele associar qualquer arquivo .java .groovy, .kt, .kts, para ele abrir direto no IntelliJ, o que isso quer dizer Tiago? (.java .gradle, groovy, .kt, kts, .pom), a gente pode ter essa dúvida, a gente vai escrever arquivos .java, uma extensão java, que nem a gente tem arquivos por exemplo de docs né do word do dois ponto doc ou do excel .xls, .csv, no java é o .java, então a gente tem que associar todos esses arquivos para que ele abra dentro do IntelliJ enquanto a gente dá um duplo clique por exemplo nesses arquivos. Então a gente vai associar esses arquivos com essa ferramenta (next), (install), a gente vai começar a escrever os nossos códigos, depois a gente vai colocar para instalar , ele vai começar a instalar dentro do seu sistema operacional, o seu IntelliJ, para a gente começar a brincar com ele, então vamos esperar ele instalar aqui eu já volto.
	Então a gente já terminou, a gente pode clicar nesse botão inicializar o nosso IntelliJ, apertando finish e ela vai começar. Se você acessar a sua desktop deve ter criado um íconezinho lá também, você também pode inicializar por lá, por lá, uma vez inicializado o IntelliJ, ele vai te perguntar se você quer importar uma configuração já instalada, as vezes se você trabalhou no computador, durante o dia de programação, a gente pode usar outros computadores, na empresa, por exemplo, a gente pode importar uma pré-configuração que a gente já tem outra máquina, nesse caso, toda vez que a gente tá instalando a gente não tem isso; então a gente vai marcar Do not import settings ou seja, não importar nenhuma configuração. Ele vai começar a inicializar o IntelliJ e aí ele vai abrir a nossa tela, principal, tá, então essa é a primeira tela, do IntelliJ.
	Tá bom? só que pro nosso projeto funcionar o IntelliJ precisa saber o caminho, onde a gente instalou o nosso jdk, porque como a gente vai utilizar, né um kit de desenvolvimento do android para escrever os nossos projetos, a gente precisa informar para ele onde ele está alocado e a gente moveu para a pasta c:, arquivos de programas, mas a gente não informou né para o computador, o sistema do windows inteiro, aonde está instalado o nosso Java, então se a gente fazer o seguinte, se a gente abrir o prompt de comando, tá, abre o prompt de comando, pesquisa na aba aqui em baixo, prompt de comando, você vai cair na tela preta, não tenha medo da tela preta, tá você como programador, você precisa aprender a mexer nessa tela preta ela não assusta. Ela pode até assustar mas não tem problema nenhum, não vai estragar o computador e o que a gente escrever aqui é totalmente seguro, fica tranquilo.
	Tá bom? então o que a gente vai fazer aqui. É verificar se o Java tá realmente dentro do sistema do windows, ele tá reconhecendo esse jdk ou não, então a gente vai escrever java -version de versão e você vai ver que ele vai falar o seguinte, 'java' não é reconhecido como um comando interno ou externo, então ele não sabe que o java tá instalado ali. A gente só moveu ele para a pasta do c: (no meu caso java version "1.8.0_391"
Java(TM) SE Runtime Environment (build 1.8.0_391-b13)
Java HotSpot(TM) 64-Bit Server VM (build 25.391-b13, mixed mode).
	Mas ele não sabe o caminho, onde ele vai abrir o arquivo do java, então o que a gente vai fazer, a gente vai clicar no direito do menu iniciar, vim em sistema. E a gente tem que informar para ele, aonde o java está alocado;
	Né a gente vai clicar aqui em Configurações avançadas do sistema, do próprio windows, clicar em variáveis de ambiente, o próprio nome já diz, uma variável que é um lugar que muda né, o comportamento de do ambiento no caso é o windows, então aqui dentro tem variáveis no sistema a gente vai clicar em novo e vamos escrever tudo maiúsculo JAVA_HOME ou seja a casa do Java, aonde tá alocado o projeto do Java né o código fonte do java, que a gente acabou baixando, jdk, então a gente vai clicar em procurar no diretório, e a gente vai navegar lá pro c: ou até ele mesmo no disco que você tem aí no seu computador, lá onde a gente tinha movido, jdk, clica no jdk-14, dá um ok.
	Então esse é o caminho, da casa do Java. Esse é o caminho JAVA_HOME. A gente vai dar um ok. E depois a gente tem que vir aqui nesse path, tá vendo esse path, path vem de caminho, caminho onde está o executável do java, a gente vai clicar em editar, e aqui a gente vai clicar em novo, e a gente vai procurar o mesmo caminho do jdk 14. Só que a gente não vai selecionar a pasta jdk 14, a gente vai selecionar essa pasta bin tá? Bin vem de binário, ou seja, onde ele realmente vai executar o código do java. Vamo clicar aqui no bin, vamo da um ok, ok aqui, ok aqui e um ok aqui. Então a gente já pode fechar, o prompt de comando.
	Abre o prompt de volta, eu sei que esse processo inicial é um pouco chato até normal tá essas pré-configurações, de instalação do sistema. É assim mesmo, normal da programação, depois fica mais fácil tá bom, e dai a gente vai dar um java -version, e aí sim vai aparecer a versão do nosso java, se você aparecer a versão do openjdk na versão 14, você instalou com sucesso, o seu java. Se não apareceu então verifica a variável de entrada de novo. Só recapitulando você vai ter que ter na variável de ambiente aqui adicionado o JAVA_HOME até o caminho, o diretório principal do java, que a gente fez, lá o download viu, precisa ser desse caminho e no path você até o caminho do bin. Tá que ele vai enchergar todos esses códigos aqui, todos eles executáveis. Tá? Tá bom? Então a gente tem que ter o JAVA_HOME, e o path ali junto com o jdk na \ bin tá. Esses é os dois passos que você precisa fazer. E agora sim se você abrir né o New Project (16:19) do IntelliJ você vai poder escolher, e vai aparecer para você o jdk 14, sim ele vai escolher, não apareceu jdk 14, você bota aqui ó add jdk, e vai lá no caminho do jdk que ele vai aparecer, tá.
	Beleza, então essa é a pré-configuração pra gente rodar o IntelliJ e para a gente rodar os nossos programas escrito em java. Então a gente vai clicar em next para a gente criar o nosso primeiro projeto. Novamente a gente não vai marcar essa opção de projeto template, a gente vai começar do absoluto zero, e a gente vai dar um next nele, agora a gente precisa dar um nome para o nosso projeto tá um nome mesmo do que a gente vai trabalhar, eu vou chamar ele de MeuPrimeiroProjeto, por convensão a gente sempre utiliza né, letras maiúsculas quando são palavras diferentes, a gente chama no padrão (Camel Case), ou seja, a primeira letra de cada palavra ela precisa ser maiúscula, tá.	
	Aqui é a localização da pasta onde ele vai salvar o projeto, nesse caso é IdeaProjects , eu vou salvar nessa pasta mesmo e dar um next pra ele. Então se a gente abrir ele aqui no explorador do windows, acessando aqui o diretório do meu usuário tiago, aqui eu vou ter a pasta que ele falou que é criada pra mim IdeaProjects, e aqui tem o meu projeto MeuPrimeiroProjeto, que ele criou. Tá? Então eu tenho aqui vários arquivos que ele me gerou automaticamente pra mim, esse aqui é o IntelliJ, tá essa aqui é a ferramenta que a gente vai trabalhar. Então eu vou clicar close aqui (que é uma dica que ele da toda vez que eu abro).
	Essas partes aqui que eu vou ta clicando aqui, vou dar um ok para sumir aqui caso você não tenha tudo bem, e esse aqui é a nossa primeira estrutura de pastas do nosso projeto. Aqui dentro dessas pastas tem algumas subpastas, né tem essa .idea com alguns códigos aqui, tem essa src que tá vazia e tem esse arquivo aqui MeuPrimeiroProjeto.iml; o que é importante para a gente aqui. O importante para a gente aqui é essa pasta de src, src vem de source, de fonte (Source Code). Então é realmente o código fonte que a gente vai escrever, é a fonte de energia vamos dizer assim do nosso projeto, então aqui dentro, é onde a gente vai começar a escrever os nossos arquivos .java, que vai ser compilado num outro arquivo intermediário chamado de .class, né o arquivo onde o sistema Android, (android não), o sistema java, vai interpretar que é uma linguagem mais de máquina, uma linguagem que a gente não entende muito bem, mas ele vai compreender quando a gente for escrever para ele. Tá, e ele vai excutar os nossos códigos aqui dentro.
	Então vamos testar a configuração inicial desse Intelli, esse primeiro vídeo, esse primeiro passo é para a gente testar o nosso ambiente né, assim como por um exemplo um editor de vídeo, configura os seus painéis no editor de vídeo, a linha do tempo, editar um vídeo a gente tem que configurar os nossos painéis aqui do IntelliJ, então aqui no src a gente vai clicar com o direito, new, Java Class. Então todo arquivo java ele tem que começar, ele tem que começar com uma Class, classe a gente vai falar de classe mais pra frente.
	Mas continua aqui comigo e vai seguindo passo a passo que você vai conseguir testar a pré-configuração do seu IntelliJ.
	O nome do nosso arquivo principal né nosso primeiro arquivo, a gente pode chamar ele de meu programa, MeuPrimeiroPrograma, novamente todo nome de classe. Toda classe deve começar com letra maiúscula então se eu criar uma classe por exemplo teste o t tem que ser letra maiúscula. Se você for criar uma classe com o nome de botão, o b ele tem que ser maiúsculo. A gente não pode usar caracteres especiais como acento porque tudo isso vem do inglês né, e no inglês a gente não usa caracteres especiais. Então ele não vai funcionar, vai dar problema. Não use acentuações no nome dos seus arquivos no nome das suas classes. Tá?
	Então quando a gente tem nomes compostos como por exemplo é Bancodedados a gente usa. A primeira letra maiúscula, daquela palavra e as demais minúsculas, padrão, padrão (kernel case? -> capital letter).
	Criar o nosso MeuPrimeiroPrograma e vamo dar um enter para a gente criar o nosso primeiro programa em Java. Então ele vai escrever uma sequência de bloco de código aqui tá.
	Eu vou aumentar a fonte, pra aumentar a fonte. Eu vou aqui em Files, Settings, tá você aqui você não precisa fazer é só pra você enxergar a fonte, aqui eu vou pesquisar na barra de pesquisa aqui, fonte (font). Eu vou aumentar a fonte do Editor, aqui. Isso vamo botar um tamanho 23 aqui que fica bom para você enxergar o código. Beleza.
	E aí a gente vai procurar escrever a nossa primeira instrução, pra gente testar o ambiente tá. É a gente vai ter sempre um bloco de código tudo na linguagem na linguagem na programação é gerenciado por blocos de código dentro dessa chave, aqui dentro desses colchetes ou chaves, é chaves, são chaves né. Então toda vez que eu abrir ou fechar é aqui um bloco que vai ser executado. Então aqui dentro a gente vai escrever o nosso primeira instrução pra gente mostrar na tela uma saída. A nossa soma de 2 + 2, ou o mais convencional que a gente use programação que é uma mensagem olá mundo. Uma mensagem Olá Mundo é uma mensagem para a gente dizer que o programa que ele está sendo executado com sucesso, e para a gente testar a nossa ferramenta pra ver se o Java tá compilando, se ele tá realmente transformando o nosso arquivo .java, .class, e executando esse programa. Então a gente vai dar um public static void main (String [] args) com S maiúsculo e vamos criar um primeiro bloco de código. Nossa Tiago tem tanta coisa escrita aí que que cada coisa quer dizer, segura aí que eu já vou explicar nas próximas aulas. Por enquanto vamos testar o ambiente de desenvolvimento tá bom? Então a gente vai escrever aqui, uma instrução pra ele sair né da uma saida aah, de uma mensagem, então a gente vai fazer um system, com S maiúsculo, novamente letra maiúscula e minúscula importa, então presta atenção muito bem nos textos, o que é maiúsculo e o que é minúsculo, porque isso faz a diferença. Tá? Se eu escrever aqui um system com s minúsculo ele não vai funcionar ele não vai entender essa instrução, porque são palavras que ele não entende ainda. A gente tá falando de linguagem de programação então uma linguagem assim como tem francês, inglês, espanhol, a gente tem a palavra é table, né por exemplo o inglês, não tem como escrever table, com dois b, ele não vai entender tá se ele for um texto do livro ele não vai entender tá.
	A mesma coisa na programação tá bom? Então a gente vai escrever aqui System.out.println e ente parênteses e aspas a gente vai escrever um "Olá mundo" e vamos finalizar ele com ponto e vírgula (;). Toda instrução ela deve finalizar com ponto e vírgula, seu eu não por ponto e vírgula eu vou por para executar ele, e não vai conseguir, a gente precisa do ponto e vírgula para executar o nosso programa primeiro programa tá?. Então você vai clicar no botão de play se não tiver aparecendo esse botão de play você pode clicar aqui do lado. Né dessa instrução main, que ele vai executar o seu programa, então o que ele vai fazer, ele vai rodar esse código, vai pegar esse arquivo .java, vai tranformar ele num .class e vai mostrar a saída pra gente aqui. Por exemplo ele me mostrou Olá mundo, se a gente colocar por exemplo 2 + 2, ele vai executar essa instrução que a gente pediu pra ele que é o 2 + 2, tá? Mais pra frente a gente vai explicar o que que cada instrução dessa, como você faz instruções a suas próprias instruções, que tipo de lógica a gente pode fazer, pra fazer uma saída, como agente começa a criar coisas realmente aqui na programação, tá bom?
	Então é essa a pré-configuração do seu IntelliJ, é muito importante que você veja com muita calma essa aula, porque esse é o ambiente de configuração, e a primeira coisa que o programador precisa aprender a fazer é configurar o seu próprio ambiente. Assim como o lenhador precisa afiar o seu machado, o marceneiro precisa né, dos seus cerrotes das suas ferramentas bem redondas bem funcionais, a gente vai fazer isso aqui também com a IDE com o nosso ambiente de desenvolvimento, com o Java instalado usando o nosso ambiente com o Java 14 e também com o IntelliJ instalado.
	Então veja com calma, volta, se der erro alguma coisa no código, leia o código com calma, é importantíssimo que você leia as coisas com atenção. Porque na programação é muito fácil da gente escrever coisas erradas da gente errar e ficar frustado porque o programa não roda. Mas se não rodar tudo bem, programação é assim mesmo você vai errar, vai dar problema, vai dar bug, fica acostumado com isso. Porque a nossa profissão é uma profissão que, querendo ou não ela não é fácil mas é possível, e é isso que os valores de programadores são realmente altas, mas no fim, vai valer a pena o esforço que você vai ter, tá bom?
Então estude, veja com calma, um passo de cada vez na direção certa, não queira sair daqui querendo fazer aplicativos do dia para a noite. Isso vai levar tempo tá é,... você tem o processo interativo para você aprender, mas fica aqui comigo, segue o passo a passo, e eu te garanto que você vai aprender a programar de verdade, tá bom?
	Então faça a configuração de sua IDE e gente se vê na próxima aula.


 e é isso
	 







