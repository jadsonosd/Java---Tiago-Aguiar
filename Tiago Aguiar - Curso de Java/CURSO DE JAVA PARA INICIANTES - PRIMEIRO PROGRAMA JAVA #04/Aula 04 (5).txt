Opa, Olá seja muito bem vindo, seja muito bem vinda, e agora a nossa terceira aula, a gente vai começar a entender de fato o que tá escrito nesse arquivo .java, o que que tá, cada coisa dessa funciona; o que que ela faz, o que que ela não faz, tá. E a gente vai fazer uma breve descrição de como funciona o nosso IntelliJ a nossa ferramente de desenvolvimento pra criar o nosso primeiro programa, ta bom? Ta vamo lá primeira coisa eu vou mostrar o IntelliJ rápido pra ele entender onde fica os arquivos, tá, então voltando, na aula anterior a gente abriu o nosso arquivo, que fica na pasta, nosso projeto, a gente tem o arquivo src, na pasta onde tem o arquivo .java que é onde a gente escreve os nossos programas, e a gente tem uma saida que o própria ferramenta fez pra gente ele realmente fez essa tradução, pro computador conseguir interpretar aquilo que a gente pediu para ele fazer, tá, então aqui do lado a gente tem, 00:52 onde fica as nossas pastas os nossos arquivos tá ele esse src que vem de source que significa fonte, é a fonte do nosso programa onde a gente começa é fonte de "energia" vamos dizer assim do nosso projeto, aqui em baixo a gente tem a saída onde a gente executa né esse run aqui, tá.
	Então a gente só precisa se preocupar com isso daqui agora, e o botãozinho de play pra fazer o nosso projeto rodar, tá bom? Quando todo projeto funciona ele, mostra que terminou tá bom? E ai a gente consegue minimizar aqui por hora, então vamo lá que que é cada linha dessa, que que tudo isso quer dizer o que que não quer dizer; e o que tá escrito aqui. Então vamo lá.
	Vamo começar a entender como a programação funciona, como um sistema funciona, como o computador consegue ler programas feito por outras pessoas, então toda vez que você, rode um programa, toda vez que você rode qualquer programa, seja o word, seja o photoshop, seja o skype, seja, ahh, o dropbox, seja o aplicativo o spotify, qualquer programa ele, você precisa você como desenvolvedor, precisa dizer pro sistema, tá executando no caso o windows, mac, linux, android, qualquer sistema, que esteja executando ele, você precisa dizer para ele onde o seu programa começa a execução qual que é o primeiro passo que é o ponto de entrada pra você começar a executar o seu programa, porquê no fim do dia você precisa dar a primeira ignição pra ele começar a entender ele, a mesma analogia do carro; pro carro comece a rodar, o motor comece a funcionar você precisa dizer para ele, como ele começa a dar a partida, então a partir da ignição desse projeto, a gente precisa dizer para ele qual que é a instrução, a primeira instrução que ele vai executar quando o projeto for inicializado, tá.
	Então a gente sabe que o programa, o programa, no fim do dia nada mais é do que instruções que você diz para ele executar, e a primeira instrução ponto de entrada que todo sistema que vai começar a ler, o sistema que rode em cima do Java é um sistema onde ele encontre essa palavra específica tá, quando ele encontrar o public static void main (String [] args), quando ele encontrar esse bloco de código, ele automaticamente sabe que o desenvolvedor diz que tudo começa nesse projeto. Então se você apagar isso aqui por exemplo tá, (public), e tentar executar, ele simplesmente não vai conseguir, ele já começa dando erro. Porquê, porque todo o seu projeto, todo, apesar de ser só um arquivo, mas imagine se eu tivesse um projeto com 20 arquivos, ele ia tentar varrer os 20 arquivos e tentar encontrar a instrução public static void main, como ele não encontrou ele diz pra mim o seguinte: a intrução main, método main não foi encontrada nessa classe MeuPrimeiroPrograma, por favor define o método main e ele mostra a instrução, tá bom?.
	Então é todo programa, todo qualquer palavra se eu colocar aqui isso aqui também, tentar executar, ele não vai a instrução do main, então por favor define o método main, tá. Esse método main a gente chama de ponto de entrada, main vem da palavra principal, então é a instrução principal que todo projeto java convencional .java standard precisa ter, Tiago no Android tem método main? Entre aspas tem, não necessariamente dessa formar mas a gente tem também a instrução que diz pro android qual é a primeira tela que ele vai abrir.
	Então por exemplo eu estou utilizando um aplicativo aqui né, por exemplo do, ahh vamo pegar o exemplo aqui clássico, o exemplo do aplicativo do netflix, se eu abrir o aplicativo do netflix aqui agora, ele quer dizer o seguinte qual é a tel que eu tenho que abrir, a tela que eu tenho que abrir é essa daqui, então dentro do projeto netflix, tem a primeira tela, e tem o método entre aspas main, que diz qual que é a primeira instrução que ele tem que fazer. Tá, então o método main, é obrigatório, pra gente dizer que o nosso programa, pro nosso computador qual que é a primeira instrução, que ele deve executar.
	Então esse é o primeiro formato padrão. Agora Tiago o que é cada palavra dessa? Calma jovem, a gente vai explicar porque aqui em cima, a gente tem outros fundamentos do java. Então por hora, entenda que toda essa instrução essa sua primeira instrução do projeto vai ser executado, mais pra frente eu vou explicar o que que é static, o que que é void, que que é main, que que é string, entre colchetes e o que que é args, eu vou explicar isso daqui mais pra frente. Tá bom? Então por hora entenda que esse daqui é o ponto de entrada como esse é o ponto de entrada, dentro desse bloco, dentro, da instrução, quando a gente define uma instrução, a gente precisa definir entre, ahh colchetes, tá, então todo tudo que tiver aqui, dentro, é que vai ser executado, é o que vai ser executado de forma sequencial, de cima para baixo. Tá bom? Então é assim que a gente define pra gente começar com o nosso ponto de entrada. E aqui dentro a gente pode fazer o que a gente quiser, fazer o computador executar instruções, como por exemplo somar números criar um botão pra mostrar na tela, ahh, fazer o registro de outros tipos de dados, qualquer coisa que o seu projeto necessitar, você vai começar a escrever no seu ponto de entrada, tá bom? 06:31, todas é, todo, tudo que a gente faz, em um ambiente de desenvolvimento, como um todo né, né numa programação em si, é basicamente tratar dados, é manipular dados, é isso que a gente tá fazendoo tempo inteiro aqui, a gente simplesmente tá manipulando dados por exemplo: seu usuário pôe um loguin e senha, numa tela, a gente manipula esses dados, a gente processa, valida se os dados batem, com o loguin e senha do usuário, e processa informação de volta do usuário mostrando mensagem de sucesso, ou uma mensagem de erro.
	Tá, então tudo que a gente faz no desenvolvimento em programação é simplesmente manipular dados, armazenar esses dados e tratar esses dados pra tomada de decisões, tá, então, todos esses dados, são armazenados em propriedades, propriedades são variáveis. (DADOS SÂO ARMAZENADOS EM PROPRIEDADES/VARIÁVEIS, então a gente precisa entender que tudo que a gente escrever aqui (07:16) dentro vai ser executado de cima para baixo, tá, e a gente precisa armazenar todas asa informações dentro de propriedades, dentro dai a gente chama de variáveis, além de propriedades e variáveis que a gente tem a gente também tem a parte de instruções ou métodos (MÉTODO / FUNÇÕES > SÃO INSTRUÇÕES (BLOCO DE CÓDIGOS) REUTILIZÁVEIS PARA ALTERAR DADOS), que a gente chama também; então, toda a vez que a gente escreve alguma instrução a gente pode utilizar um bloco de instrução pra ele fazer a execução dele novamente, então eu vou clarear mais ou menos o que eu quero dizer aqui, tá.
	Voltando aqui a gente tem escrito uma instrução pra ele. Todo esse bloco de código aqui, diz respeito ao seguinte, olha, execute a instrução que eu to querendo passar pra ele que no caso é a instrução é pra imprimir alguma coisa na tela, tá bom?
	Então essa é uma instrução pré-definida, dentro do próprio kit de desenvolvimento Java, é uma instrução feita pelos próprios desenvolvedores java. Agora se eu quiser criar a minha própria instrução eu consigo? Sim a gente consegue a gente pode criar um novo bloco de instrução aqui. Então é só a gente escrever novamente um void e eu posso colocar aqui por exemplo ó, minhaInstruçãoDeImprimir() e a gente pode definir também um bloco de código. Então esse bloco de código, esse bloco de instrução, ele também vai ser executado assim que a gente precisar chamar ele tá então se eu eventualmente passar essa instrução do java aqui pra dentro e chamar (system out em baixo do void) essa instrução aqui, eu já vou explicar para você como que isso é feito, diminuir aqui, static eu posso chamar aqui a minha instrução, e ai ele vai executar essa instrução, aqui que eu chamei. Tá bom.
	Todas as instruções éeh, elas são feitas dentro desses parenteses entre colchetes tá, então a gente precisa de uma forma o de outra definir tudo dentro desses parênteses para conseguir executar as instruções, então tudo o que eu escrever aqui dentro, ele vai tentar tentar interpretar, tá. Se eu executar isso daqui com essa palavra, ele vai dar alguns erros pra mim que ele não entende essas palavras, se eu escrever aqui ó, computador some dois numeros, isso daqui são instruções que ele não compreende, ele não entende essas palavras, computador some dois números, ele entende outras palavras pré-definidas. A menos que eu coloco //, tá, (barra barra), então se eu colocar qualquer // no começo, ele não vai ler esse projeto, ele não vai ler essas, essa linha que começa com //, e porquê que isso é importante Tiago? Isso aqui é importante quando você tá criando algum algoritmo alguma lógica de programação que você quer deixar uma nota para o desenvolvedor então, por exemplo se eu tenho uma instrução aqui, éeh, deixo eu voltar aquela instrução que é instrução de imprimir na tela, vamo voltar ctrl + z, tá, se eu tenho essa instrução aqui ó e eu passar aqui dentro por exemplo (2 + 2), e mandar executar, ele vai tentar executar essa instrução que é 2 + 2.
	No caso a resposta aqui foi 4, tá. Então se eu eventualmente quero mostrar para um outro desenvolvedor, o que que isso aqui tá fazendo, eu posso colocar um // e escrever um comentário eu vou escrever no comentário o seguinte a seguinte linha é para imprimir um cálculo de 2 + 2.
	Então o meu programa o meu programa quando ele for compilado ou quando ele foi gerado com uma linguagem de máquina, e vai descartar isso aqui, é como se ele tirasse isso daqui tá, isso aqui é só pelo desenvolvedor conseguir colocar notas dentro do seu código para entender o que ele tá fazendo pra ele conseguir colocar uma coisa que ele fez há 10 anos atrás (COMENTÁRIOS // SÃO IGNORADOS E NÃO FAZEM PARTE DO PROGRAMA COMO INSTRUÇÂO), e não lembro porque que ele fez aquilo. Então as notas são importantes pra gente conseguir é, colocar referências, e eu vou começar a utilizar essas notas aqui nas aulas para eu conseguir explicar para você de forma prática o programa então por exemplo a gente falou que a gente precisa armazenar, // armazenar propriedades e variáveis, então o meu programa não vai ler essas intruções essa linha aqui ele não vai ler vai descartar e eu consigo comunicar com código e colocar notas no meu projeto tá bom então voltando aqui, que que a gente tem.
	A gente tem uma instrução que precisa ficar dentro de um bloco de código através de colchetes e ele vai ser executado de cima pra baixo, tá então a gente colocou uma outra instrução aqui dentro, uma intrução que soma 2 + 6 (dois com seis), uma outra instrução que imprime texto, ola texto, uma outra intrução que faz uma divisão, por exemplo pra uma intrução de 10 / 5, tá ou por 3 por exemplo. Se a gente mandar rodar o nosso projeto ele vai executar, esse ponto de entrada, ele vai dizer o seguinte, olha qual é o ponto de entrada? Ele vai encontrar o ponto de entrada que é o main, e ai ele vai executar na sequência de cima para baixo; tá. Então ele sempre, vai tentar executar ele, quando chegar no final ele o programar acabou e ai ele simplesmente finaliza o meu programa.
	Então ele executou todas as intruções que a gente pediu para ele executar tá, todas as intruções que a gente pede, a gente precisa terminar com ponto e vírgula. Sempre em java a gente precisa finalizar com ponto e vírgula, se eu não por ponto e vírgula, ele vai marcar esse errozinho aí em vermelho, então todo, toda, coisa que estiver escrita, no seu projeto estiver errada, ele vai estar sublinhado nele, e se a gente, tentar executar ele novamente, ele vai mostrar ("A IDE TE AJUDA A ENCONTRAR ERROS EM VERMELHO NO SEU CÓDIGO-FONTE"), aqui um erro na linha que tá dando, linha 5 coluna 34, ponto e vírgula esperado, então ele tem que finalizar sempre com ponto e vírgula, toda instrução que você for dar pra ele, você tem que definir com ponto e vírgula ;, tá bom? Além disso a gente sempre quando a gente escreve, um código, a gente utiliza o conceito de indentação, o que é indentação Tiago?, (IDENTAÇÃO), olha o programa ele não identifica espaço, pra ele não importa o espaço que ele esteja utilizando se eu colocar tudo isso em uma linha, vamo colocar isso tudo em uma linha, coloquei aqui na linha, vamo por isso na mesma linha, ó ficar tudo tudo junto, tá, tá vendo, o computador não importa se você de espaço pra ele não interpreta espaço, pra ele tanto faz, o que importa é essa chave, agora tudo bloco de código tá dentro da chave valor, se eu executar isso daqui, na mesma linha, ele continua funcionando normalmente. Tá só que pra gente como ser humano fica inviável isso daqui escrever um programa na mesma linha. 14:03  Então a gente tem um padrão em desenvolvimento que chama de indentação que é o que.
	Primeira coisa é escrever o bloco, de código e dentro desse bloco de código a gente dá um tab, tá, aperta um tab, e aí com o tab a gente tem esse espaçamento aqui que, diz respeito ao bloco, de código então quando eu olho esse código, eu entendo que, tudo que tá escrito aqui, pertence a esse, a essa, instrução, tá, tudo que tá escrito aqui, pertence a esta instrução, esse bloco de código nesse escopo de código, a gente chama de escopo, tá, então, dentro do escopo da instrução principal, a gente tem 4 instruções, que são executadas de cima para baixo, e elas estão dentro desse escopo, a intrução principal, você vê que ela está dentro de um escopo, um escopo de uma classe, que é o nosso primeiro programa, tá, então é assim que a gente vai fazer, tá bom, assim que a gente vai interpretando o que está dentro de outra intrução.
	Se eu tivesse mais um bloco de código aqui, tá, a gente poderia, ir eventualmente, colocar mais uma intrução aqui dentro, tá e executar e definir elas aqui.
	Então isso daqui, esse conceito, a gente chama de indentação.
	Como você está utilizando uma IDE; como o IntelliJ 15:18 (quando você) 15:19 quando você dá um enter, tá vendo ele já coloca o seu cursor já identado ele coloca o cursor aqui, pra você escrever o seu programa aqui, então ide, é muito rica por causa disso, porque ela facilita a gente escrever essas instruções aqui tá bom? só fique ligado nessa aula você só tem que entender aqui você sempre precisa definir, um ponto de entrada no seu programa em Java pra você começar a escrever as suas instruções para ele começar a entender executar de forma sequencial, pra você, de cima para baixo, então o que a gente aprendeu nessa aula foi:
	-> //comentários > // utilizando //, tá  -> (comentários) são uteis para indicar comentários/notas no projetos
		então é pra isso que a gente utiliza comentários, tá
	-> outra coisa que a gente tem, que a gente aprendeu, é o ponto de entrada
	-> ponto de entrada -> entry-point -> é o ponto onde todos sistemas procuram no seu projeto para
	// começar a iniciar o projeto 

	Então o ponto de entrada mesmo o próprio nome já diz, é isso daqui, é,...
	// métodos: (o que são métodos),... são instruções que (você) define para o programa executar . Exemplo (se você criar uma instrução chamada)
	// instrução chamada calcular()
	Então essa é a minha instrução diz pro computador calcular dois números, tá bom?
	// intrucao chamada System.out.println("")
	// propriedades/variaveis -> será onde iremos armazenar dados para manipulalos no futuro.

	Ou armazenar também por exemplo a instrução do nome do email, assim por diante tá bom.

	Muito obrigado essa aula só fica nesses pontos, basta a gente vai começar a escrever o nosso programa de linha de comando mesmo pra gente conseguir dar sequencia, tá bom eu vou ficando por aqui e te vejo no próximo vídeo.