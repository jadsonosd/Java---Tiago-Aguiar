Opa seja muito bem vindo, seja muito bem vinda de volta e dando continuidade a nosso curso de Java, hoje a gente vai falar sobre ahh, programação dinâmica, utilizando variáveis então só recapitulando na aula passada, a gente aprendeu sobre comentários que são úteis para a gente indicar notas nos nossos projetos a gente tá desenvolvendo e de enventualmente a gente dizer/fazer alguma anotação a gente usa comentários o ponto de entrada que é a nossa função main o nosso método main que diz respeito ao sistema de ele encontrar onde o nosso programa vai começar né, métodos que são instruções que a gente define que pode ser reutilizada mais pra frente, a gente vai falar mais disso, então por exemplo a instrução do println e agora a gente vai falar mais a fundo sobre tópico de propriedades/variáveis. Que nada mais é que é o lugar onde a gente vai começar a armazenar e manipular dados no futuro. Então até o momento a gente simplesmente fez alguns tipos de programas que faziam sempre a mesma coisa, né, eles mostravam os mesmos resultados, os mesmos textos, enfim, não era de fato um programa dinâmico. Então talvez você esteja entrado em alguns sites por exemplo onde ele mostra o nome do usuário quando você faz o login 01:10, por exemplo, Olá Tiago, seja bem-vindo de volta, esse tipo de coisa, então todo contexto de computacional né de programação em si de manipulação de informação, e em como um todo, ela precisa ser dinâmica precisa ser customizável, né customizado por exemplo, a gente abriu o aplicativo o site do youtube, o site do youtube a gente vai ter aqui as opções pra gente escolher né, 00:58 por exemplo aqui são de dark theme eu posso mudar o estado da minha tela, eu posso definir, a lingua do meu aplicativo ou do meu site de preferência, que eu to utilizando enfim, tudo isso daqui, são coisas dinâmicas, o nome do usuário que aparece daqui tá todas essas informações são informações dinâmicas que a gente precisa é, entender como é que a gente começa a manipular tá, então de fato, variáveis a gente utiliza variáveis pra gente conseguir armazenar esses dados, dinâmicos, tá, mas no fim do dia esses dados dinâmicos são nada mais, nada menos espaços de memória onde o seu computador armazena esses dados tá, o computador ele não vai conseguir necessariamente armazenar textos, é, de fato como a gente tá escrevendo aqui, por exemplo "ola texto", o computador no fim do dia, armazena somente números, tá, é só números que ele armazena e a gente vai falar sobre números e armazenamentos de dados.
	Mas imagina o seguinte cenário, todos os lugares todas as coisas que a gente escreve, todas as intruções, todos os textos, todos as variáveis, quase tudo que a gente escreve aqui eles foram armazenados em memória, do próprio computador. Então tem aqui um exemplo clássico de uma memória ram de um computador ela é meramente ilustrativo mas da para você entender o conceito, cada memória é como se fosse uma casa, tá é literalmente um espaço, onde lá dentro tem tamanhos específicos, e ele pode ser armazenado dados nesses endereços aqui tá, pra gente gerenciar isso manualmente e fazer uma armazenamento dos dados dos lugares específicos é uma coisa meio que surreal e é por isso que é uma linguagem de alto nível vai facilitar a nossa vida pra gente armazenar dados, aqui dentro. 03:24
	Tá bom? Então, entenda só variáveis como espaço alocados a gente vai conseguir armazenar as nossas informações e depois a gente vai ter uma referência pra acessar essas informações lá no futuro quando a gente precisar, então como que a gente declara variáveis aqui no java, tá eu vou apagar todos esses comentários, essas intruções e a gente vai começar aqui do zero novamente tá bom? então vamo lá, primeira coisa que a gente tem que ter em mente 03:50, deixa só eu diminuir o espaço aqui, é que quando a gente começa a escrever é espaços de memória a gente tem sintaxes diferentes a gente precisa usar palavras específicas tá, assim como a gente utiliza ou aqui para definir o ponto de entrada do nosso programa, então no Java moderno, tá, a gente pode declarar uma variável, a gente pode armazenar é, fazer um espaço no nosso computador pra armazenar textos, números, números fracionados é, condições booleanas a gente vai falar mais pra frente, então pra fazer isso no Java moderno, a gente usa a palavra privada var, a palavra privada var, automaticamente é uma referência para o variable, tá, ou variável se você queira chamar assim também dessa forma, e a gente começa a definir o nome de referência pra aquele espaço de memória então por exemplo se eu quiser armazenar um espaço de memória de texto eu posso escrever aqui ó var.login que seria o espaço armazenado de login tá, = (recebe) quando a gente dá um único igual a gente tá dizendo recebe então esse espaço de memória tá a gente pode acessar através da referência login, ele vai armazenar por exemplo texto, então o texto seria é Ola, tá e a gente põe um ponto e vírgula porque a gente definiu a instrução, então isso daqui, no java moderno, é uma instrução pra definir uma variável que tem uma referência no nome de login, tá esse nome pode ser qualquer nome que você queira porque é a sua referência que o computador não necessariamente importa com o nome que você coloca aqui, porque o que importa para ele, é o que você definiu e o conteúdo que você definiu. 05:34
	Então se a gente fazer uma analogia bem, bem cru mesmo, tá, bem simples, é como se eu tivesse, pedido pro computador o seguinte: olha computador, eu quero guardar um texto, chamado Ola, mas pra isso, me reserve um espaço de memória e aí a gente definiu o var, que depois eu acessar esse mesmo espaço aqui que eu, eu ah eu to mostrando aqui, com essa mesma sequência de, de endereço, pela palavra login, então é isso que ele tá fazendo no fim do dia. Tá, então se eu agora tentar usar a instrução de imprimir, que a gente usou na aula passada, System.out.println(), eu não preciso necessariamente agora passar aqui dentro diretamente a palavra específico Ola, eu posso passar uma referência de uma variável, então tá, se a gente mandar rodar o nosso projeto, ele vai ter o mesmo resultado que teve da aula passada, então tá bom? 06:28
	Então o que que, isso aqui quer dizer no fim do dia, é uma variável posso mudar o estado dessa variável, depois de, na ordem da execução, então por exemplo eu vou pegar aqui, a própria referência, da variável login, que a gente tinha definido, tá e vou mandar ela receber a palavra Mundo. Então eu substitui tá o conteúdo dessa variável, olha se eu mandar rodar novamente, como a gente executou de cima para baixo, automanticamente ele vai imprimir o conteúdo, dentro dessa variável, que no caso é a palavra Mundo; tá. 06:59
	Então entenda é eu vou repetir de novo eu vou ficar repetindo essa frase porque é pra você internalizar o conceito, aqui a teoria é importante, e também a prática é importante pra você executar. (Acrescento import java.util.Random; que faltou)
	Então login, é simplesmente o nome da referência, é o nome de referência, que a gente usa, para um determinado tipo, nesse caso é uma variável, que fica armazenado dentro dos slots da memória ram, do computador, tá bom? Então assim de uma forma humanizada a gente consegue conversar e acessar aqueles espaços específicos de memória, pra gente conseguir manipular depois durante o programa tá, então essa é a forma de a gente armazenar variáveis, dentro do código dentro do java.07:40
	A gente pode definir por exemplo variáveis, pra armazenar textos, que a gente já aprendeu entre aspas a gente vai guardar textos aqui, a gente pode definir também números então eu vou definir uma variável, como a referência chamada number1 = (e vou colocar aqui por exemplo) 01; é põe 10, põe 10 vai, e aqui eu vou imprimir a variável number1. Então ele vai imprimir o conteúdo dessa variável que no caso é o número 10, vou apertar pra rodar, novamente ele vai imprimir aqui, número 10. 08:09 aqui colocar 10.3, ele vai fazer a mesma coisa. Tá e assim por diante.
	Tá, agora, o computador ele não entende necessariamente textos, tá ele não compreende e é, números fracionados, o que ele compreende no fim do dia sempre é um número complexo, tá, então o que que a gente vai fazer,... Como a gente tá imprimindo, textos, como é que o computador interpreta esses textos, a gente tem né, um mundo computacional, a grosso modo. Tudo o que o computador interpreta são números, então ele tem uma tabela, que vai fazer referências, de cada caractere do alfabeto e ele transforma todos os caracteres em números pra ele compreender. Então eu vou abrir aqui um uma imagem bem ilustrativa aqui também, é como se fosse isso daqui tá, o computador só entende números 01 01 01 como eu falei na aula passada, nos vídeos introdutórios, isso aqui é de tensão voltagem, energia, tá, 09:06, então pra ele entender energia pra, de uma forma ou de outra mostrar na tela do usuário através dos píxels e pintar todo o monitor aí pra você, ele vai precisar de energia, então aqui é uma referência bem simples tá, meramente ilustrativa, é como se fosse isso.
	Se eu tivesse que escrever a palavra por exemplo, Ola como a gente tinha escrito aqui, Ola, ele simplesmente teria que escrever todas essas sequências de letras, de números, tá pra fazer o Ola, então ele teria que escrever tudo isso daqui (O 0100 1111) depois ele tem que escrever esse (l 0110 1100) l aqui, depois todo esse a aqui (a 0110 0001) pra escrever Ola, não é necessariamente assim que ele faz tá, ele faz é muito mais complexo, que isso mas é pra você ter uma noção do que ele faz por baixo dos panos, por baixo do capô, aí do seu carro. Tá bom então esse aqui é o motor mesmo do que acontece. Agora, perceba que eu mudei pra texto tá eu coloquei Ola ele vai transformar isso num número, vai interpretar número e vai mostrar o resultado aqui pra gente aqui, mas mesmo assim eu defini como number né escrevi aqui number que é número tá, escrevi number e e tá interpretando que é de novo esse mesmo conceito, isso daqui é só referência tá é uma referência com espaço de memória, não que ele necessariamente precisa definir a palavra number.
	Você pode escrever o que você quiser, eu vou escrever aqui ó por exemplo chaves, chaves por exemplo e eu vou colocar aqui ó chaves e ele vai interpretar na, normalmente tá bom. Não tem problema nenhum ó nome de variáveis são importantes para a gente definir e a gente compreender o que quer dizer o conteúdo daquela variável. Então voltando aqui, 10:46 no nosso caso inicial a gente tinha o login, então como esse programa entende que, o conteúdo armazenado nessa variável, diz respeito a um login, do usuário por exemplo, tá, então é assim que funciona. 11:01
	Agora a gente pode definir outras variáveis, eu vou definir aqui por exemplo a variável de senha, aqui o password como qualquer letra, e também imprimir o password aqui, eu imprimo aqui o password e continuo funcionando aqui normalmente a nossa instrução de imprimir na tela.
	Então que tipo de variáveis a gente tem, a gente tem variáveis do tipo de, textos que a gente chama de strings, aqui em linhas computacionais aqui a gente tem variáveis do tipo, números, que a gente chama de inteiros, ou ints, tá. A gente também tem variáveis, como números fracionados, no caso desse mais que a gente chama de double, tá. E a gente tem variáveis dos tipos com expressões condições que a gente chama de condições booleanas que foi o criador né, que descobriu a condição verdadeiro ou falso; a gente tem duas condições aqui verdadeiro ou falso, eu vou falar mais daqui, daqui a pouco tá bom? Então essa, esse, são os tipos de variáveis, tá.
	No java moderno quando a gente especifica, um var, automaticamente quando ele atribui. Quando você diz o seguinte para ele, vou definir um var chamado number1, e vou receber aqui o número a palavra 200. Tá, ele entende que como tá entre aspas esse aqui é um texto, não necessariamente um número representativo pra ele. Mas se eu tirar as aspas, e deixar como número ele entende que isso é um número inteiro e se eu por casas decimais ele entende que é um número fracionado, tá. Ou se eu colocar por exemplo true como verdadeiro ele entende que é uma condição verdadeira ou uma condição falsa, false. Então com um java moderno ele simplesmente precisa definir variáveis var e automaticamente ele sabe é, o tipo de dado.
	E ai a gente vai começar a abordar agora tipos de dados. Então vamo lá, no começo dessa aula eu falei que o computador só vai interpretar números no fim do dia, seu texto vai ser número, suas condições fracionadas vão ser número, tudo vai ser número. Os seus objetos 13:11 lá na frente quando você for criar um usuário na sua tela ela vai ser número as cores que você definiu no seu site é tudo número, tudo no fim do dia vai ser número; computador só vai interpretar números, tá a soma é feita com números, a divisão também é feita com números expressões também, então, pra que a gente conseguisse, falar com o computador nativamente lá na mesma língua dele vamos dizer assim, a gentes sim poderia falar tudo em número, tá, sempre com ele com número e compreendendo número mas a gente não consegue falar tudo em número é surreal conversar em números então a gente utiliza, tipos de dados pra gente conseguir falar com uma linguagem de alto nível como por exemplo a Java pra gente dizer pro computador é e ele interpretar em números, e a gente compartilhar com outro desenvolvedor, e a gente conseguir ler o código, tá, então se a gente vai eventualmente ler um texto a gente tem que definir, o que aquele tipo de variável aquele tipo de dado armazenado naquele espaço específico de memória, é um texto.
	Então por isso que a gente define tipos de dados, a gente conseguisse falar tudo em número e conversasse com a máquina como era mesmo as conversa sozinha, ele a gente conseguiria falar tudo em número e não é, isso que acontece no fim do dia, tá, então existe alguns tipos de dados que a gente precisa definir existe vários deles, eu vou te mostrar o essencial por ordem para a gente explorar outros tá, o primeiro tipo de dado que a gente tem; são textos são palavras, que a gente chama de string, então da mesma forma, que eu defini um var aqui eu posso definir novamente, aqui, um outro var aqui.
	Tá então eu vou comentar essa linha aqui, e a gente vai definir aqui, o tipo, string, o nome da raferência que é no caso login, novamente = recebe o conteúdo Ola. Tá, então se a gente for ver o primeiro caractere aqui que vai ser sempre um tipo, depois a gente vai ter, o nome da referência, e depois vai ter recebe = e o conteúdo da referência, tá, então é assim que funciona pra gente declarar, é esse daqui, funciona só em módulos antigos do Java, não sei necessariamente a versão se é a versão 10, se é a versão 11, pra baixo, você precisa declarar o tipo você, obrigatiriamente tem que declarar tipo, se você por só var, ele não vai entender. Tá, quem não vai fazer essa tradução automática pra você, no Java moderno ele faz isso automaticamente, mas o Java, mais antigo, né já tá evoluindo bastante com Java, você não precisa, você não pode botar direto o var.
	Então esse é o tipo de texto, tá, string é pra gente guardar é variável, né é a representação vou colocar aqui representação de textos. Da tabela ASCII por exemplo que nem eu mostrei pra vocês agora a pouco, aqui.
	Tá, então isso daqui, é traduzido em textos em caracteres, que o computador consegue compreender. Outro tipo inteiro, a gente já, falou então a gente define aqui. int ele até tem a palavra privada colorida, então a gente vai por aqui int number1 = 10; e ai a gente já tem o número. Mas ele tá mostrando um erro aqui, ele tá mostrando um erro aqui, que a referência number1, já tá apontando um espaço de memória, com outro tipo ó tá vendo, então eu posso ter duas variáveis com mesmo nome, dentro do mesmo escopo de nome, um bloco de código, ta bom? Então, sempre quando a gente define um bloco de código, entre chaves, a gente precisa desse, definir, sempre um nome único, se não eu vou sobrescrever esse nome aqui, (number1), e não faz sentido nenhum tá então eu vou tirar ele aqui como eu não vou utilizar ele aqui, por hora que eu vou começar a explicar tipos,  tá, mas a gente declarou aqui também um nome, então eu posso imprimir o número aqui, mandar rodar novamente aqui, ele vai imprimir o número 10 aqui, tá vendo, então esse aqui, pra gente é um texto, e esse aqui é um número. 17:16
	Eu poderia representar esse mesmo número 10, num formato de texto, colocando entre aspas, tá só que aí, eu precisaria trocar isso para string, e aí sim eu estaria dizendo para o computador, olha, ele é agora de fato, um texto, vamo tentar representar ele, como inteiro, e tentar passar aspas pra ele. Tá vendo que marcou um erro? Se a gente tentar rodar ele de novamente, vai dar erro no nosso programa. Ele vai dizer o seguinte aqui, ó, tipos incompatíveis, string não pode ser convertida para inteiro. 17:45 Então automaticamente a nossa IDE, vai mostrando um erro que a gente tá escrevendo no nosso código. Tá, então inteiro a gente não define entre aspas, a gente define diretamente; precisamente assim. 17:57
	Outro tipo que a gente tem tá, eu vou colocar aqui, inteiro é a representação, de números inteiros, tá. Outro tipo que a gente tem, é o tipo double, double, é um tipo, que a gente representa é, basicamente // representação de números fracionados vou ver (se mais queira chamar) ou decimais como você queira chamar. 18:27 Então eu vou colocar aqui, um percentual, aqui a gente percent igual a 24.30; Então a gente tem aqui a representação do número decimal vamo imprimir a instrução de cima para baixo, vou colocar aqui, dentro do parênteses, percent, tá e ai eu vou mandar, rodar. E aí vai imprimir 24.30, tá você viu que ele tirou o zero porquê ele viu que não fazia sentido imprimir o zero aqui. 18:51 (vem chuva rsrs) Porquê é uma casa decimal é entre aspas e inútil nesse caso, vou por 33 só pra você ver o resultado aqui acontecendo tá. Então tá ali 24.33 . Então assim a gente vai criando outros tipos de dados, qual o outro tipo de dado que a gente tem, a gente tem o tipo boolean que é uma a representação, de novo, é a representação de novo, porque é a representação booleana. Uma representação booleana possui dois estados, é o estado veradeiro ou estado falso.
	Um exemplo de uma expressão booleana que a gente tem, a gente pode, ter uma definição se o cara é motorista ou não. Então eu vou por aqui is, que é a, é, driver, isDriver = true. Então ele é um motorista? Sim ele é um motorista. Então eu posso imprimir aqui, expressão como isDriver, tá e eu vou rodar novamente. Ele vai imprimir true, posso usar false também. Então são só duas expressões que eu vou adicionar aqui na expressão booleana. Tá, e agora você deve estar se perguntando mas Tiago mas está tudo em inglês, number, percent, se eu escrever português funciona? funciona. Eu posso colocar aqui ó é motorista, colocar aqui percentual, percentual, numero1, e login pq é acesso, tá, vai funcionar da mesma forma, porque, porque isso aqui, é só uma referência, é uma referência a representação do seu conteúdo, é uma referência do tipo, então o que é aqui importante é o tipo e o conteúdo do tipo, isso aqui é só pra você conseguir acessar, tá, o conteúdo, dentro, é,... conteúdo dessa variável aqui, o conteúdo que foi armazenado dentro desses tipos aqui. Tá bom, no fim do dia tudo é inteiro mas pra gente representar a gente representa dessa forma aqui, e porque se escreve inglês Tiago, ó, eu escrevi em português porque todo mundo escreve programação, todos os, em qualquer lugar que você for trabalhar é importante que você manter o seu código em inglês, porque qualquer desenvolvedor em qualquer lugar do mundo é uma linguagem universal, vai conseguir interpretar o que o seu código tá escrevendo, tá. Se você for tentar passar esse código aqui para um americano como palavra motorista ele não necessariamente sabe o que é motorista vai funcionar do mesmo jeito? Vai. Mas eu não aconselho você escrever as coisas em português porque necessariamente você não vai estar, sendo desenvolvedor profissional aí tá, então, ou seja você quer distribuir o seu código para o mundo afora se você quiser que outros, desenvolvedores participem do seu projeto, que entre na sua equipe, que trabalhe com você de forma mais eh profissional mesmo eu aconselho você a se acostumar com a língua inglesa eu sei talvez seja difícil agora pra mim também foi no começo, mas com o tempo você vai acostumando.
	Né tudo, é assim que acontece na vida. Você não vai aprender tudo do dia pra noite, tá, mas é importante.